"""Initial migration - fixed URL index

Revision ID: 04fc60a82ac9
Revises: 
Create Date: 2025-06-20 13:26:15.871024

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '04fc60a82ac9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('provider', sa.Enum('GITHUB', 'GOOGLE', name='providertype'), nullable=False),
    sa.Column('provider_id', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('bookmark_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('category1', sa.String(length=100), nullable=True),
    sa.Column('category2', sa.String(length=100), nullable=True),
    sa.Column('category3', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bookmark_notes_category1'), 'bookmark_notes', ['category1'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_category2'), 'bookmark_notes', ['category2'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_category3'), 'bookmark_notes', ['category3'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_id'), 'bookmark_notes', ['id'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_is_deleted'), 'bookmark_notes', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_title'), 'bookmark_notes', ['title'], unique=False)
    op.create_index(op.f('ix_bookmark_notes_user_id'), 'bookmark_notes', ['user_id'], unique=False)
    op.create_table('urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_urls_id'), 'urls', ['id'], unique=False)
    op.create_index(op.f('ix_urls_user_id'), 'urls', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_urls_user_id'), table_name='urls')
    op.drop_index(op.f('ix_urls_id'), table_name='urls')
    op.drop_table('urls')
    op.drop_index(op.f('ix_bookmark_notes_user_id'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_title'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_is_deleted'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_id'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_category3'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_category2'), table_name='bookmark_notes')
    op.drop_index(op.f('ix_bookmark_notes_category1'), table_name='bookmark_notes')
    op.drop_table('bookmark_notes')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
