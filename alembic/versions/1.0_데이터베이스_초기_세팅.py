"""데이터베이스 초기 세팅

Revision ID: 1.0
Revises: 
Create Date: 2025-06-21 17:04:31.205862

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1.0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('full_name', sa.String(length=255), nullable=True),
    sa.Column('avatar_url', sa.String(length=500), nullable=True),
    sa.Column('provider', sa.Enum('GITHUB', 'GOOGLE', name='providertype'), nullable=False),
    sa.Column('provider_id', sa.String(length=100), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_users_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_users_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)

    op.create_table('bookmark_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('category1', sa.String(length=100), nullable=True),
    sa.Column('category2', sa.String(length=100), nullable=True),
    sa.Column('category3', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('bookmark_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_bookmark_notes_category1'), ['category1'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_category2'), ['category2'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_category3'), ['category3'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_is_deleted'), ['is_deleted'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_title'), ['title'], unique=False)
        batch_op.create_index(batch_op.f('ix_bookmark_notes_user_id'), ['user_id'], unique=False)

    op.create_table('urls',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(length=2048), nullable=False),
    sa.Column('title', sa.String(length=500), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('urls', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_urls_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_urls_user_id'), ['user_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('urls', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_urls_user_id'))
        batch_op.drop_index(batch_op.f('ix_urls_id'))

    op.drop_table('urls')
    with op.batch_alter_table('bookmark_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_user_id'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_title'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_is_deleted'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_id'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_category3'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_category2'))
        batch_op.drop_index(batch_op.f('ix_bookmark_notes_category1'))

    op.drop_table('bookmark_notes')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_index(batch_op.f('ix_users_id'))
        batch_op.drop_index(batch_op.f('ix_users_email'))

    op.drop_table('users')
    # ### end Alembic commands ###
